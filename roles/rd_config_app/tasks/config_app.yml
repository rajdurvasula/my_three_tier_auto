---
#
# Task to Configure Application
#

- name: Replace DB host
  replace:
    path: "{{ tomcat_deployer_dir }}/{{ APP_NAME }}/WebContent/WEB-INF/web.xml"
    regexp: "localhost"
    replace: "{{ groups['appdbs'][0] }}"

- name: Replace DB listen port
  replace:
    path: "{{ tomcat_deployer_dir }}/{{ APP_NAME }}/WebContent/WEB-INF/web.xml"
    regexp: "5432"
    replace: "{{ db_listen_port }}"

- name: Replace Application DB user
  replace:
    path: "{{ tomcat_deployer_dir }}/{{ APP_NAME }}/WebContent/WEB-INF/web.xml"
    regexp: "guest1"
    replace: "{{ app_user }}"

- name: Replace Application DB name
  replace:
    path: "{{ tomcat_deployer_dir }}/{{ APP_NAME }}/WebContent/WEB-INF/web.xml"
    regexp: "sampledb"
    replace: "{{ app_db_name }}"

- name: Replace Application DB user password
  replace:
    path: "{{ tomcat_deployer_dir }}/{{ APP_NAME }}/WebContent/WEB-INF/web.xml"
    regexp: "passw0rd"
    replace: "{{ app_password }}"

- name: Copy PostgreSQL JDBC Driver jar to Tomcat Lib directory
  copy:
    src: "{{ postgres_jdbc_dir }}/{{ postgres_jdbc_driver_file }}"
    dest: "{{ tomcat_lib_dir }}/{{ postgres_jdbc_driver_file }}"
    remote_src: yes

- name: Copy deployer.properties
  template:
    src: deployer.properties.j2
    dest: "{{ tomcat_deployer_dir }}/deployer.properties"
    force: yes

- name: Update deploy script
  lineinfile:
    path: "{{ tomcat_deployer_dir }}/deploy.sh"
    line: "{{ item }}"
    insertafter: EOF
  with_items:
    - "export CLASSPATH=$CLASSPATH:build/webapp/{{ APP_NAME }}/build/classes"
    - "ant -Dwebapp={{ APP_NAME }} -Dpath=/{{ APP_NAME }} compile"

- name: Run deploy script
  shell: |
    source /root/.bashrc ;
    cd "{{ tomcat_deployer_dir }}" ;
    "{{ tomcat_deployer_dir }}/deploy.sh"
  args:
    executable: /bin/bash
